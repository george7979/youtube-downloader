#!/bin/bash

# Funkcja do czekania na zwolnienie blokady dpkg
wait_for_dpkg() {
    while fuser /var/lib/dpkg/lock >/dev/null 2>&1 || fuser /var/lib/apt/lists/lock >/dev/null 2>&1 || fuser /var/cache/apt/archives/lock >/dev/null 2>&1; do
        echo "⏳ Czekam na zwolnienie blokady dpkg..."
        sleep 5
    done
}

# Sprawdź czy Python jest zainstalowany
if ! command -v python3 >/dev/null 2>&1; then
    echo "🐍 Python3 nie jest zainstalowany. Instalowanie..."
    wait_for_dpkg
    apt-get update
    apt-get install -y python3 python3-venv python3-pip python3-tk
fi

# Sprawdź czy system jest gotowy do tworzenia venv
echo "🔍 Sprawdzanie gotowości systemu..."

# Sprawdź czy venv jest dostępny
if ! python3 -c "import venv" 2>/dev/null; then
    echo "⚠️ python3-venv nie jest dostępny"
    echo "Instalowanie w tle..."
    nohup bash -c 'sleep 5; apt-get update && apt-get install -y python3-venv' >/dev/null 2>&1 &
fi

# Sprawdź czy tkinter jest dostępny
if ! python3 -c "import tkinter" 2>/dev/null; then
    echo "⚠️ python3-tk nie jest dostępny"
    echo "Instalowanie w tle..."
    nohup bash -c 'sleep 5; apt-get update && apt-get install -y python3-tk' >/dev/null 2>&1 &
fi

# Sprawdź czy pip jest dostępny
if ! python3 -c "import pip" 2>/dev/null; then
    echo "⚠️ pip nie jest dostępny"
    echo "Instalowanie pip przez curl..."
    curl https://bootstrap.pypa.io/get-pip.py | python3
fi

# Utwórz środowisko wirtualne z lepszą obsługą błędów
echo "🔧 Tworzenie środowiska wirtualnego..."

# Próbuj standardową metodę
if python3 -m venv /usr/share/youtube-downloader/venv 2>/dev/null; then
    echo "✅ Środowisko wirtualne utworzone pomyślnie"
else
    echo "❌ Błąd: Nie udało się utworzyć środowiska wirtualnego"
    echo "Próbuję alternatywną metodę..."
    
    # Usuń uszkodzone venv jeśli istnieje
    rm -rf /usr/share/youtube-downloader/venv 2>/dev/null || true
    
    # Próbuj z --without-pip
    if python3 -m venv --without-pip /usr/share/youtube-downloader/venv 2>/dev/null; then
        echo "✅ Środowisko wirtualne utworzone bez pip"
        # Zainstaluj pip w venv przez curl
        curl https://bootstrap.pypa.io/get-pip.py | /usr/share/youtube-downloader/venv/bin/python
    else
        echo "❌ Błąd: Nie udało się utworzyć środowiska wirtualnego"
        echo "Próbuję ręczną metodę..."
        
        # Ręczne utworzenie venv
        mkdir -p /usr/share/youtube-downloader/venv/bin
        mkdir -p /usr/share/youtube-downloader/venv/lib/python3.*/site-packages
        mkdir -p /usr/share/youtube-downloader/venv/include
        
        # Skopiuj Python do venv
        cp $(which python3) /usr/share/youtube-downloader/venv/bin/python
        cp $(which python3) /usr/share/youtube-downloader/venv/bin/python3
        
        # Utwórz activate script
        cat > /usr/share/youtube-downloader/venv/bin/activate << 'EOF'
#!/bin/bash
export VIRTUAL_ENV="/usr/share/youtube-downloader/venv"
export PATH="$VIRTUAL_ENV/bin:$PATH"
unset PYTHONHOME
EOF
        chmod +x /usr/share/youtube-downloader/venv/bin/activate
        
        # Zainstaluj pip przez curl
        curl https://bootstrap.pypa.io/get-pip.py | /usr/share/youtube-downloader/venv/bin/python
    fi
fi

# Sprawdź czy venv został utworzony poprawnie
if [ ! -d "/usr/share/youtube-downloader/venv" ] || [ ! -f "/usr/share/youtube-downloader/venv/bin/activate" ]; then
    echo "❌ Błąd krytyczny: Środowisko wirtualne nie zostało utworzone"
    echo "Próbuję ponownie utworzyć środowisko wirtualne..."
    
    # Usuń uszkodzone venv jeśli istnieje
    rm -rf /usr/share/youtube-downloader/venv 2>/dev/null || true
    
    # Spróbuj ponownie utworzyć venv
    if python3 -m venv /usr/share/youtube-downloader/venv 2>/dev/null; then
        echo "✅ Środowisko wirtualne utworzone ponownie"
    else
        echo "❌ Nie udało się utworzyć środowiska wirtualnego"
        echo "Aplikacja może nie działać poprawnie"
        echo "Spróbuj ponownie za kilka minut po zakończeniu instalacji zależności"
    fi
fi

# Zainstaluj zależności w środowisku wirtualnym
echo "📚 Instalowanie zależności w środowisku wirtualnym..."
if /usr/share/youtube-downloader/venv/bin/pip install yt-dlp 2>/dev/null; then
    echo "✅ Zależności zainstalowane pomyślnie"
else
    echo "❌ Błąd: Nie udało się zainstalować zależności"
    echo "Próbuję ponownie..."
    /usr/share/youtube-downloader/venv/bin/pip install --upgrade pip
    if /usr/share/youtube-downloader/venv/bin/pip install yt-dlp 2>/dev/null; then
        echo "✅ Zależności zainstalowane pomyślnie"
    else
        echo "❌ Błąd: Nie udało się zainstalować zależności"
        echo "Aplikacja może nie działać poprawnie"
    fi
fi

# Sprawdź czy zależności zostały zainstalowane poprawnie
echo "🔍 Sprawdzanie instalacji zależności..."
if /usr/share/youtube-downloader/venv/bin/python -c "import yt_dlp" 2>/dev/null; then
    echo "✅ Zależności działają poprawnie"
else
    echo "❌ Błąd: Zależności nie działają poprawnie"
    echo "Instalowanie w tle..."
    nohup bash -c 'sleep 10; /usr/share/youtube-downloader/venv/bin/pip install yt-dlp' >/dev/null 2>&1 &
fi

# Aktualizuj ikony i desktop
if command -v update-icon-caches >/dev/null 2>&1; then
    update-icon-caches /usr/share/icons/hicolor
fi

if command -v update-desktop-database >/dev/null 2>&1; then
    update-desktop-database /usr/share/applications
fi

# Utwórz katalog logów użytkownika
if [ -n "$SUDO_USER" ]; then
    USER_HOME=$(getent passwd "$SUDO_USER" | cut -d: -f6)
else
    USER_HOME=$HOME
fi

if [ -n "$USER_HOME" ] && [ -d "$USER_HOME" ]; then
    mkdir -p "$USER_HOME/.youtube-downloader" || true
fi

chmod 755 /usr/bin/youtube-downloader || true
chmod 644 /usr/share/applications/youtube-downloader.desktop || true

echo "✅ YouTube Downloader v1.0.2 został zainstalowany pomyślnie!"
echo "🚀 Uruchom aplikację komendą: youtube-downloader"
echo "📱 Lub znajdź w menu aplikacji systemu"
echo "📝 Logi będą zapisywane w: ~/.youtube-downloader/youtube_downloader.log"
echo ""
echo "🔄 Instalowanie zależności w tle... (może potrwać kilka minut)"
echo "Jeśli aplikacja nie działa, spróbuj ponownie za kilka minut"
echo ""
echo "⚠️  UWAGA PRAWNA: Ta aplikacja jest narzędziem technicznym."
echo "Użytkownik odpowiada za legalność pobierania treści."
